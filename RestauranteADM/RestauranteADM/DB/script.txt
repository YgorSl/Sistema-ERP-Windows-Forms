SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;


CREATE TABLE IF NOT EXISTS `mydb`.`tb_cliente` (
  `id_cliente` INT(11) NOT NULL AUTO_INCREMENT,
  `nm_nome` VARCHAR(16) NULL DEFAULT NULL,
  `ds_cpf` CHAR(16) NULL DEFAULT NULL,
  `ds_telefone` CHAR(11) NULL DEFAULT NULL,
  `ds_cep` VARCHAR(45) NULL DEFAULT NULL,
  `ds_bairro` VARCHAR(45) NULL DEFAULT NULL,
  `ds_numero_casa` VARCHAR(45) NULL DEFAULT NULL,
  `ds_tipo_pessoa` varchar(50),
  `ds_cnpj` VARCHAR(20) NULL DEFAULT NULL,
  `ds_anotaçao_cliente` VARCHAR(200) NULL DEFAULT NULL,
  `ds_data_hoje` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`id_cliente`))
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8;
-- -----------------------------------------------------
-- Table `mydb`.`tb_cardapio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_cardapio` (
  `id_cardapio` INT(11) NOT NULL AUTO_INCREMENT,
  `nm_prato` VARCHAR(45) NOT NULL,
  `ds_prato` VARCHAR(45) NOT NULL,
  `ds_tamanho` VARCHAR(45) NOT NULL,
  `vl_valor` DOUBLE(10,2) NOT NULL,
  PRIMARY KEY (`id_cardapio`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`tb_cliente`
-- -----------------------------------------------------



-- -----------------------------------------------------
-- Table `mydb`.`tb_fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_fornecedor` (
  `id_fornecedor` INT(11) NOT NULL AUTO_INCREMENT,
  `nm_nome` VARCHAR(45) NOT NULL,
  `ds_cnpj` VARCHAR(45) NOT NULL,
  `ds_telefone` VARCHAR(45) NOT NULL,
  `ds_endereço` VARCHAR(45) NOT NULL,
  `ds_cidade` VARCHAR(45) NOT NULL,
  `ds_estado` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_fornecedor`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8;

-- -----------------------------------------------------
-- Table `mydb`.`tb_compras_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_compras_produto` (
  `id_compras` INT(11) NOT NULL AUTO_INCREMENT,
  `nm_produto` VARCHAR(45) NOT NULL,
  `vl_valor` DOUBLE(10,2) NOT NULL,
  `id_fornecedor` INT NOT NULL,
  PRIMARY KEY (`id_compras`),
  INDEX `id_fornecedor_idx` (`id_fornecedor` ASC),
  CONSTRAINT `id_fornecedor`
    FOREIGN KEY (`id_fornecedor`)
    REFERENCES `mydb`.`tb_fornecedor` (`id_fornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;



-- -----------------------------------------------------
-- Table `mydb`.`tb_funcionarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_funcionarios` (
  `id_funcionarios` INT(11) NOT NULL AUTO_INCREMENT,
  `nm_nome` VARCHAR(45) NOT NULL,
  `ds_cpf` VARCHAR(45) NULL DEFAULT NULL,
  `ds_RG` VARCHAR(45) NULL DEFAULT NULL,
  `ds_endereco` VARCHAR(45) NULL DEFAULT NULL,
  `ds_salario` decimal(10,2) NULL DEFAULT NULL,
  PRIMARY KEY (`id_funcionarios`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;



-- -----------------------------------------------------
-- Table `mydb`.`tb_folha_de_pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_folha_de_pagamento` (
  `id_folha_pagamento` INT(11) NOT NULL AUTO_INCREMENT,
  `id_funcionario` INT(11) NOT NULL,
  `vl_VR` DOUBLE(8,2) NULL DEFAULT NULL,
  `vl_DSR` DOUBLE(8,2) NULL DEFAULT NULL,
  `vl_SalarioLiquido` DOUBLE(8,2) NULL DEFAULT NULL,
  `ds_He` DOUBLE(8,2) NULL DEFAULT NULL,
  `ds_VT` DOUBLE(8,2) NULL DEFAULT NULL,
  `ds_INSS` DOUBLE(8,2) NULL DEFAULT NULL,
  `ds_IRRF` DOUBLE(8,2) NULL DEFAULT NULL,
  `ds_FGTS` DOUBLE(8,2) NULL DEFAULT NULL,
  `ds_convenio` DOUBLE(8,2) NULL DEFAULT NULL,
  `ds_cestabasica` DOUBLE(8,2) NULL DEFAULT NULL,
  `desco_atraso` DOUBLE(8,2) NULL DEFAULT NULL,
  `ds_faltas` DOUBLE(8,2) NULL DEFAULT NULL,
  `ds_bonus` DOUBLE(8,2) NULL DEFAULT NULL,
  `nm_nome` VARCHAR(50) NULL DEFAULT NULL,
  `ds_cpf` VARCHAR(50) NULL DEFAULT NULL,
  `dt_data` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`id_folha_pagamento`),
  CONSTRAINT `tb_folha_pagamento_fk_1`
    FOREIGN KEY (`id_funcionario`)
    REFERENCES `mydb`.`tb_funcionarios` (`id_funcionarios`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8;

 


-- -----------------------------------------------------
-- Table `mydb`.`tb_conta_pagar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_conta_pagar` (
  `id_conta_pagar` INT(11) NOT NULL AUTO_INCREMENT,
  `nm_nome` VARCHAR(45) NOT NULL,
  `id_comprar_produto` INT(11) NULL DEFAULT NULL,
  `id_folha_pagamento` INT(11) NULL DEFAULT NULL,
  `vl_preço` DOUBLE(10,2) NULL DEFAULT NULL,
  `dt_data` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`id_conta_pagar`),
  CONSTRAINT `id_compra_produto`
    FOREIGN KEY (`id_comprar_produto`)
    REFERENCES `mydb`.`tb_compras_produto` (`id_compras`),
  CONSTRAINT `id_folha_pagamento`
    FOREIGN KEY (`id_folha_pagamento`)
    REFERENCES `mydb`.`tb_folha_pagamento` (`id_folha_pagamento`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8;

-- -----------------------------------------------------
-- Table `mydb`.`tb_estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_estoque` (
  `id_estoque` INT(11) NOT NULL AUTO_INCREMENT,
  `dt_validade` DATE NOT NULL,
  `dt_entrada` DATE NOT NULL,
  `dt_saida` DATE NULL DEFAULT NULL,
  `id_compras_produto` INT(11) NOT NULL,
  PRIMARY KEY (`id_estoque`),
  INDEX `id_compras_produto` (`id_compras_produto` ASC),
  CONSTRAINT `tb_estoque_ibfk_1`
    FOREIGN KEY (`id_compras_produto`)
    REFERENCES `mydb`.`tb_compras_produto` (`id_compras`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`tb_venda_prato`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_venda` (
  `id_venda` INT(11) NOT NULL AUTO_INCREMENT,
  `data_venda` DATETIME NOT NULL,
  `id_cliente` INT(11) NOT NULL,
  PRIMARY KEY (`id_venda`),
    FOREIGN KEY (`id_cliente`)
    REFERENCES `mydb`.`tb_cliente` (`id_cliente`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;




CREATE TABLE IF NOT EXISTS `mydb`.`tb_venda_item` (
  `id_venda_item` INT(11) NOT NULL AUTO_INCREMENT,
  `id_cardapio` INT(11) NOT NULL,
  `id_venda` INT(11) NOT NULL,
  PRIMARY KEY (`id_venda_item`),
    FOREIGN KEY (`id_venda`)
    REFERENCES `mydb`.`tb_venda` (`id_venda`),
    FOREIGN KEY (`id_cardapio`)
    REFERENCES `mydb`.`tb_cardapio` (`id_cardapio`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;








-- -----------------------------------------------------
-- Table `mydb`.`tb_contas_a_receber`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_contas_a_receber` (
  `id_contas _a_receber` INT(11) NOT NULL AUTO_INCREMENT,
  `id_vendas` INT(11) NOT NULL,
  `dt_data` DATE NOT NULL,
  PRIMARY KEY (`id_contas _a_receber`),
  INDEX `id_vendasr_idx` (`id_vendas` ASC),
  CONSTRAINT `id_vendas`
    FOREIGN KEY (`id_vendas`)
    REFERENCES `mydb`.`tb_venda_prato` (`id_venda_prato`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`tb_permissao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_permissao` (
  `id_permissao` INT(11) NOT NULL AUTO_INCREMENT,
  `nm_login` VARCHAR(45) NOT NULL,
  `ds_senha` VARCHAR(45) NOT NULL,
  `id_funcionario` INT(11) NOT NULL,
  `perm_total` TINYINT(1) NULL DEFAULT NULL,
  `perm_cadastro` TINYINT(1) NULL DEFAULT NULL,
  `perm_vendas` TINYINT(1) NULL DEFAULT NULL,
  `perm_compras` TINYINT(1) NULL DEFAULT NULL,
  `perm_rh` TINYINT(1) NULL DEFAULT NULL,
  `perm_financeiro` TINYINT(1) NULL DEFAULT NULL,
  `perm_cadastrarcliente` TINYINT(1) NULL DEFAULT NULL,
  `perm_cadastrarfornecedor` TINYINT(1) NULL DEFAULT NULL,
  `perm_cadastrarproduto` TINYINT(1) NULL DEFAULT NULL,
  `perm_cadastrarcardapio` TINYINT(1) NULL DEFAULT NULL,
  `perm_cadastrarfuncionario` TINYINT(1) NULL DEFAULT NULL,
  `perm_cadastrarpedido` TINYINT(1) NULL DEFAULT NULL,
  `perm_cadastrarvenda` TINYINT(1) NULL DEFAULT NULL,
  `perm_cadastrarfolha` TINYINT(1) NULL DEFAULT NULL,
  `perm_consultarcliente` TINYINT(1) NULL DEFAULT NULL,
  `perm_consultarfornecedor` TINYINT(1) NULL DEFAULT NULL,
  `perm_consultarproduto` TINYINT(1) NULL DEFAULT NULL,
  `perm_consultarcardapio` TINYINT(1) NULL DEFAULT NULL,
  `perm_consultarfuncionario` TINYINT(1) NULL DEFAULT NULL,
  `perm_consultarpedido` TINYINT(1) NULL DEFAULT NULL,
  `perm_consultarvenda` TINYINT(1) NULL DEFAULT NULL,
  `perm_consultarfolha` TINYINT(1) NULL DEFAULT NULL,
  `perm_alterarcliente` TINYINT(1) NULL DEFAULT NULL,
  `perm_alterarfornecedor` TINYINT(1) NULL DEFAULT NULL,
  `perm_alterarfuncionario` TINYINT(1) NULL DEFAULT NULL,
  `perm_alterarproduto` TINYINT(1) NULL DEFAULT NULL,
  `perm_alterarcardapio` TINYINT(1) NULL DEFAULT NULL,
  `perm_alterarpedido` TINYINT(1) NULL DEFAULT NULL,
  `perm_alterarvenda` TINYINT(1) NULL DEFAULT NULL,
  `perm_excluircliente` TINYINT(1) NULL DEFAULT NULL,
  `perm_excluirfornecedor` TINYINT(1) NULL DEFAULT NULL,
  `perm_excluirfuncionario` TINYINT(1) NULL DEFAULT NULL,
  `perm_excluirproduto` TINYINT(1) NULL DEFAULT NULL,
  `perm_excluircardapio` TINYINT(1) NULL DEFAULT NULL,
  `perm_excluirpedido` TINYINT(1) NULL DEFAULT NULL,
  `perm_excluirvenda` TINYINT(1) NULL DEFAULT NULL,
  `perm_excluirfolha` TINYINT(1) NULL DEFAULT NULL,
  

  PRIMARY KEY (`id_permissao`),
  INDEX `id_funcionario` (`id_funcionario` ASC),
  CONSTRAINT `tb_permissao_ibfk_1`
    FOREIGN KEY (`id_funcionario`)
    REFERENCES `mydb`.`tb_funcionarios` (`id_funcionarios`)
    on delete cascade
    on update cascade)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`tb_ponto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_ponto` (
  `id_ponto` INT(11) NOT NULL AUTO_INCREMENT,
  `id_funcionario` INT(11) NOT NULL,
  `dt_data` DATE NOT NULL,
  `hr_entrada` TIME NOT NULL,
  `hr_almoço_ida` TIME NULL DEFAULT NULL,
  `hr_almoço_volta` TIME NULL DEFAULT NULL,
  PRIMARY KEY (`id_ponto`),
  INDEX `id_funcionario` (`id_funcionario` ASC),
  CONSTRAINT `tb_ponto_ibfk_1`
    FOREIGN KEY (`id_funcionario`)
    REFERENCES `mydb`.`tb_funcionarios` (`id_funcionarios`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`tb_compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_compra` (
  `id_compra` INT NOT NULL AUTO_INCREMENT,
  `id_fornecedor` INT NOT NULL,
  `dt_compra` DATETIME NOT NULL,
  PRIMARY KEY (`id_compra`),
  INDEX `id_forncedor_idx` (`id_fornecedor` ASC),
  CONSTRAINT `id_forncedor`
    FOREIGN KEY (`id_fornecedor`)
    REFERENCES `mydb`.`tb_fornecedor` (`id_fornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tb_compra_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_compra_item` (
  `id_compra_item` INT NOT NULL AUTO_INCREMENT,
  `id_compra` INT NOT NULL,
  `id_compra_produto` INT NOT NULL,
  PRIMARY KEY (`id_compra_item`),
  INDEX `id_compra_idx` (`id_compra` ASC),
  INDEX `id_compra_produto_idx` (`id_compra_produto` ASC),
  CONSTRAINT `id_compra`
    FOREIGN KEY (`id_compra`)
    REFERENCES `mydb`.`tb_compra` (`id_compra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_compra_produt`
    FOREIGN KEY (`id_compra_produto`)
    REFERENCES `mydb`.`tb_compras_produto` (`id_compras`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `mydb`.`tb_fluxo_caixa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tb_fluxo_caixa` (
  `id_fluxo_caixa` INT(11) NOT NULL AUTO_INCREMENT,
  `id_venda_item` INT(11) NOT NULL,
  `id_conta_pagar` INT(11) NOT NULL,
  `id_folha_pagamento` INT(11) NOT NULL,
  PRIMARY KEY (`id_fluxo_caixa`),
  CONSTRAINT `tb_fluxo_caixa_ibfk_1`
    FOREIGN KEY (`id_venda_item`)
    REFERENCES `mydb`.`tb_venda_item` (`id_venda_item`),
  CONSTRAINT `tb_fluxo_caixa_ibfk_2`
    FOREIGN KEY (`id_conta_pagar`)
    REFERENCES `mydb`.`tb_conta_pagar` (`id_conta_pagar`),
  CONSTRAINT `tb_fluxo_caixa_ibfk_3`
    FOREIGN KEY (`id_folha_pagamento`)
    REFERENCES `mydb`.`tb_folha_de_pagamento` (`id_folha_pagamento`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

use mydb;


select* from Fluxo_view where dt_data>= '2018-10-18' and '2018-10-18' <=  dt_data order by dt_data, ds_caixa;

select * from Fluxo_view where dt_data like'%%' and dt_data like '%%' ;



 
SELECT 
     date(dt_data) dt_data,
    SUM(vl_SalarioLiquido + ds_cestabasica+ds_convenio) as vl_valor,
    'saida'    as			ds_caixa,
	'Folha de Pagamento'   as  ds_movimento
FROM
    tb_folha_de_pagamento group by dt_data


union
		SELECT
		date(dt_compra) as dt_data,
		 sum( vl_valor)    as vl_total,
            'saida'    as			ds_caixa,
			'Compra'   as  ds_movimento
          
          
FROM tb_compra

INNER JOIN tb_compra_item
ON tb_compra.id_compra = tb_compra_item.id_compra
JOIN tb_compras_produto
ON tb_compra_item.id_compra_produto = tb_compras_produto.id_compras
JOIN tb_fornecedor
ON tb_fornecedor.id_fornecedor= tb_compras_produto.id_fornecedor
group by dt_data

union

       SELECT date(data_venda) as dt_data,
          sum(vl_valor)    as vl_total,
		 'Entrada'  as ds_caixa,
        ' venda'   as ds_movimento
        from tb_venda_item
    

inner join tb_venda
on tb_venda_item.id_venda=tb_venda.id_venda
inner join tb_cardapio
on tb_venda_item.id_cardapio=tb_cardapio.id_cardapio
inner join tb_cliente
on tb_venda.id_cliente=tb_cliente.id_cliente
group by dt_data

union

select date(dt_data) as dt_data,
sum(vl_preço) as vl_total,
 'saida'  as ds_caixa,
'conta'   as ds_movimento
 from tb_conta_pagar;
 
 

create view compravw as 
       SELECT date(dt_compra)   as    dt_compra,
          sum( vl_valor)       as vl_total,
          count(tb_compra_item.id_compra_item) as  vl_qtd,
          nm_nome
FROM tb_compra

INNER JOIN tb_compra_item
ON tb_compra.id_compra = tb_compra_item.id_compra
JOIN tb_compras_produto
ON tb_compra_item.id_compra_produto = tb_compras_produto.id_compras
JOIN tb_fornecedor
ON tb_fornecedor.id_fornecedor= tb_compras_produto.id_fornecedor;

select * from tb_fornecedor;

select * from tb_compras_produto;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;





create view impor as 
       SELECT date(data_venda),
          sum(vl_valor)    as vl_total,
          count(tb_venda_item.id_venda_item) as  ds_qtd,
          nm_prato
FROM tb_venda_item

inner join tb_venda
on tb_venda_item.id_venda=tb_venda.id_venda
inner join tb_cardapio
on tb_venda_item.id_cardapio=tb_cardapio.id_cardapio;





